# Configuración NGINX optimizada para PWAs y móviles
# Basada en mejores prácticas 2024 de la comunidad

server {
    listen 80;
    listen [::]:80;
    server_name lawanalytics.app www.lawanalytics.app;
    
    # Redirigir a HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name lawanalytics.app www.lawanalytics.app;

    # SSL Configuration (ajustar paths según tu servidor)
    ssl_certificate /etc/letsencrypt/live/lawanalytics.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lawanalytics.app/privkey.pem;

    root /var/www/law-analytics-front/build;
    index index.html;

    # CRÍTICO: Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # CRÍTICO: NUNCA cachear index.html
    location = /index.html {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Headers para forzar actualización
        add_header Last-Modified $date_gmt always;
        add_header ETag "" always;
        if_modified_since off;
        etag off;
        
        try_files $uri =404;
    }

    # CRÍTICO: Para rutas SPA, servir index.html sin cache
    location / {
        try_files $uri $uri/ /index.html;
        
        # No cachear navegación
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
    }

    # Service Workers - NUNCA cachear
    location ~ ^/(sw\.js|sw-new\.js|service-worker\.js)$ {
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Service-Worker-Allowed "/" always;
        
        # Importante para Service Workers
        add_header Clear-Site-Data "\"cache\"" always;
    }

    # Manifest - cache corto
    location = /manifest.json {
        add_header Cache-Control "no-cache, must-revalidate, max-age=300" always;
    }

    # Assets con hash - cache largo (inmutables)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Solo cachear si tiene hash en el nombre
        if ($uri ~* ".*-[a-f0-9]{8}\..*") {
            add_header Cache-Control "public, max-age=31536000, immutable" always;
        }
        
        # Sin hash - cache corto
        if ($uri !~* ".*-[a-f0-9]{8}\..*") {
            add_header Cache-Control "public, max-age=3600, must-revalidate" always;
        }
    }

    # API - nunca cachear
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # No cache para API
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}